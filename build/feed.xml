<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2013-09-16T00:00:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Using the Unix 'cal' commmand</title>
    <link rel="alternate" href="/2013/09/16/using-the-unix-cal-command/"/>
    <id>/2013/09/16/using-the-unix-cal-command/</id>
    <published>2013-09-16T00:00:00Z</published>
    <updated>2013-09-16T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Multiple times per day, I pull up a calendar to look at a date.  For example, I might need to find "what day of the week is Sept 1st" or "what was the week ending date of that week."
&lt;/p&gt;
&lt;p&gt;Normally, I pull up the calendar in the OS X Dashboard:
&lt;div class='text-center'&gt;&lt;img src="/images/os-x-dashboard-calendar.png" alt="os x dashboard calendar" &gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;This works ok for one month, but scrolling to the past or future isn't quick, and you can't see more than one month.  Plus, it's sometimes hard to tell what month you're looking at or how to get back to the current month.&lt;/p&gt;
&lt;p&gt;Now, I turn to the &lt;code&gt;cal&lt;/code&gt; command, available from *nix command lines.&lt;/p&gt;
&lt;p&gt;
  &lt;h4&gt;Without arguments, &lt;code&gt;cal&lt;/code&gt; shows the current month&lt;/h4&gt;
  &lt;pre&gt;
$ cal
   September 2013
Su Mo Tu We Th Fr Sa
 1  2  3  4  5  6  7
 8  9 10 11 12 13 14
15 16 17 18 19 20 21
22 23 24 25 26 27 28
29 30
  &lt;/pre&gt;

&lt;/p&gt;

&lt;p&gt;
  &lt;h4&gt;You can pass just a year and &lt;code&gt;cal&lt;/code&gt; shows that year&lt;/h4&gt;
  &lt;h4&gt;&lt;code&gt;cal -y&lt;/code&gt; is a shortcut for the current year&lt;/h4&gt;
  &lt;pre&gt;
$ cal 2013
                             2013

      January               February               March
Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa
       1  2  3  4  5                  1  2                  1  2
 6  7  8  9 10 11 12   3  4  5  6  7  8  9   3  4  5  6  7  8  9
13 14 15 16 17 18 19  10 11 12 13 14 15 16  10 11 12 13 14 15 16
20 21 22 23 24 25 26  17 18 19 20 21 22 23  17 18 19 20 21 22 23
27 28 29 30 31        24 25 26 27 28        24 25 26 27 28 29 30
                                            31
       April                  May                   June
Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa
    1  2  3  4  5  6            1  2  3  4                     1
 7  8  9 10 11 12 13   5  6  7  8  9 10 11   2  3  4  5  6  7  8
14 15 16 17 18 19 20  12 13 14 15 16 17 18   9 10 11 12 13 14 15
21 22 23 24 25 26 27  19 20 21 22 23 24 25  16 17 18 19 20 21 22
28 29 30              26 27 28 29 30 31     23 24 25 26 27 28 29
                                            30
        July                 August              September
Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa
    1  2  3  4  5  6               1  2  3   1  2  3  4  5  6  7
 7  8  9 10 11 12 13   4  5  6  7  8  9 10   8  9 10 11 12 13 14
14 15 16 17 18 19 20  11 12 13 14 15 16 17  15 16 17 18 19 20 21
21 22 23 24 25 26 27  18 19 20 21 22 23 24  22 23 24 25 26 27 28
28 29 30 31           25 26 27 28 29 30 31  29 30

      October               November              December
Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa
       1  2  3  4  5                  1  2   1  2  3  4  5  6  7
 6  7  8  9 10 11 12   3  4  5  6  7  8  9   8  9 10 11 12 13 14
13 14 15 16 17 18 19  10 11 12 13 14 15 16  15 16 17 18 19 20 21
20 21 22 23 24 25 26  17 18 19 20 21 22 23  22 23 24 25 26 27 28
27 28 29 30 31        24 25 26 27 28 29 30  29 30 31
  &lt;/pre&gt;

&lt;/p&gt;

&lt;p&gt;
  &lt;h4&gt;Pass [month] [year] and &lt;code&gt;cal&lt;/code&gt; shows just the specified month&lt;/h4&gt;
  &lt;pre&gt;
$ cal 12 2012
   December 2012
Su Mo Tu We Th Fr Sa
                   1
 2  3  4  5  6  7  8
 9 10 11 12 13 14 15
16 17 18 19 20 21 22
23 24 25 26 27 28 29
30 31
&lt;/pre&gt;

&lt;/p&gt;

&lt;p&gt;
  &lt;h4&gt;Or, just &lt;code&gt;cal -m [month]&lt;/code&gt; to default to the current year&lt;/h4&gt;
  &lt;pre&gt;
$ cal -m 12
   December 2013
Su Mo Tu We Th Fr Sa
 1  2  3  4  5  6  7
 8  9 10 11 12 13 14
15 16 17 18 19 20 21
22 23 24 25 26 27 28
29 30 31
  &lt;/pre&gt;
&lt;/p&gt;


&lt;p&gt;
  &lt;h4&gt;Get days of the year (Julian days) with &lt;code&gt;cal -j [month] [year]&lt;/code&gt;&lt;/h4&gt;
  &lt;pre&gt;
$ cal -j 12 2012
       December 2012
 Su  Mo  Tu  We  Th  Fr  Sa
                        336
337 338 339 340 341 342 343
344 345 346 347 348 349 350
351 352 353 354 355 356 357
358 359 360 361 362 363 364
365 366
  &lt;/pre&gt;
&lt;/p&gt;



&lt;p&gt;The new version of cal is &lt;code&gt;ncal&lt;/code&gt;.  It transposes the calendar (days run down the side) and can feel cramped, but it can fit more across a screen.&lt;/p&gt;

&lt;p&gt;
  &lt;h4&gt;Without arguments, &lt;code&gt;ncal&lt;/code&gt; shows the current month.&lt;/h4&gt;
  &lt;pre&gt;
$ ncal
    September 2013
Mo     2  9 16 23 30
Tu     3 10 17 24
We     4 11 18 25
Th     5 12 19 26
Fr     6 13 20 27
Sa     7 14 21 28
Su  1  8 15 22 29
  &lt;/pre&gt;

&lt;/p&gt;
&lt;p&gt;
  &lt;h4&gt;To show week numbers in the new format, use &lt;code&gt;ncal -w&lt;/code&gt;.&lt;/h4&gt;
  &lt;pre&gt;
$ ncal -yw
                                  2013
    January           February          March             April
Mo     7 14 21 28        4 11 18 25        4 11 18 25     1  8 15 22 29
Tu  1  8 15 22 29        5 12 19 26        5 12 19 26     2  9 16 23 30
We  2  9 16 23 30        6 13 20 27        6 13 20 27     3 10 17 24
Th  3 10 17 24 31        7 14 21 28        7 14 21 28     4 11 18 25
Fr  4 11 18 25        1  8 15 22        1  8 15 22 29     5 12 19 26
Sa  5 12 19 26        2  9 16 23        2  9 16 23 30     6 13 20 27
Su  6 13 20 27        3 10 17 24        3 10 17 24 31     7 14 21 28
    1  2  3  4  5     5  6  7  8  9     9 10 11 12 13    14 15 16 17 18
    May               June              July              August
Mo     6 13 20 27        3 10 17 24     1  8 15 22 29        5 12 19 26
Tu     7 14 21 28        4 11 18 25     2  9 16 23 30        6 13 20 27
We  1  8 15 22 29        5 12 19 26     3 10 17 24 31        7 14 21 28
Th  2  9 16 23 30        6 13 20 27     4 11 18 25        1  8 15 22 29
Fr  3 10 17 24 31        7 14 21 28     5 12 19 26        2  9 16 23 30
Sa  4 11 18 25        1  8 15 22 29     6 13 20 27        3 10 17 24 31
Su  5 12 19 26        2  9 16 23 30     7 14 21 28        4 11 18 25
   18 19 20 21 22    22 23 24 25 26    27 28 29 30 31    31 32 33 34 35
    September         October           November          December
Mo     2  9 16 23 30     7 14 21 28        4 11 18 25        2  9 16 23 30
Tu     3 10 17 24     1  8 15 22 29        5 12 19 26        3 10 17 24 31
We     4 11 18 25     2  9 16 23 30        6 13 20 27        4 11 18 25
Th     5 12 19 26     3 10 17 24 31        7 14 21 28        5 12 19 26
Fr     6 13 20 27     4 11 18 25        1  8 15 22 29        6 13 20 27
Sa     7 14 21 28     5 12 19 26        2  9 16 23 30        7 14 21 28
Su  1  8 15 22 29     6 13 20 27        3 10 17 24        1  8 15 22 29
   35 36 37 38 39 40 40 41 42 43 44    44 45 46 47 48    48 49 50 51 52  1
  &lt;/pre&gt;

&lt;/p&gt;
&lt;p&gt;
  &lt;h4&gt;Finally, calculate the date of Easter with &lt;code&gt;ncal -e&lt;/code&gt;&lt;/h4&gt;
  &lt;pre&gt;
$ ncal -e 2014
April 20 2014
  &lt;/pre&gt;

&lt;/p&gt;
&lt;p&gt;
  You can use &lt;code&gt;man cal&lt;/code&gt; to get more details and examples.

&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Recover a dropped stash in git</title>
    <link rel="alternate" href="/2013/08/15/recover-a-dropped-stash-in-git/"/>
    <id>/2013/08/15/recover-a-dropped-stash-in-git/</id>
    <published>2013-08-15T00:00:00Z</published>
    <updated>2013-08-15T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I was working on a git branch and did a 'git stash save' on some changes, then did a pull, then went to lunch.  When I got back, I fixed something on another branch, then went to 'git stash pop' them.
&lt;/p&gt;

&lt;p&gt;Without thinking, I did a hard reset and wiped them out, but I'd already taken them out of the stash area. Ack!&lt;/p&gt;

&lt;p&gt;I thought about checking to see if it's possible to recover a dropped stash from the reflog, but turns out it was easier than that. I had already run &lt;code&gt;git stash show&lt;/code&gt; earlier and had something like this:

&lt;pre class="highlight shell"&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;git stash pop
&lt;span class="o"&gt;[&lt;/span&gt;...]
Dropped refs/stash@&lt;span class="o"&gt;{&lt;/span&gt;0&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;6ddc4021719ddd8f5e35f5d63e8e04b9ab2c5650&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;In this case, I had the SHA of that commit, so a &lt;code&gt;git branch tmp 6ddc4&lt;/code&gt; made a new branch with that commit on the tip of it, and I could move along.&lt;/p&gt;
&lt;p&gt;Naturally, I couldn't stop thinking about this and wondered what I would do if I didn't have the commit around. Could I find it in the reflog?&lt;/p&gt;
&lt;p&gt;Turns out, you can use &lt;code&gt;git fsck&lt;/code&gt; to find 'dangling commits':

&lt;pre class="highlight shell"&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;git fsck --no-reflog | grep &lt;span class="s1"&gt;'dangling commit'&lt;/span&gt; | cut -d &lt;span class="s1"&gt;' '&lt;/span&gt; -f 3
&lt;/pre&gt;
This gave me a list of all commits that weren't referenced anymore. From there, I did &lt;code&gt;git show SHA&lt;/code&gt; on them to find the one I was interested in.
&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>What's New in Ruby: July 2013</title>
    <link rel="alternate" href="/2013/07/09/whats-new-in-ruby-july-2013/"/>
    <id>/2013/07/09/whats-new-in-ruby-july-2013/</id>
    <published>2013-07-09T00:00:00Z</published>
    <updated>2013-07-09T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">Every month, &lt;a href="http://meetup.com/kcruby"&gt;Kansas City Ruby&lt;/a&gt; (#kcruby) reviews a subset of Peter Cooper's fantastic &lt;a href="http://rubyweekly.com/?utm_source=databasically"&gt;Ruby Weekly&lt;/a&gt; selections, along with other items picked up around the web.


&lt;h4&gt;&lt;a href="http://weblog.rubyonrails.org/2013/6/25/Rails-4-0-final/" target="_blank"&gt;Rails 4.0 Final is out!&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;
  &lt;blockquote&gt;
  A big focus has been on making it dead simple to build modern web applications that are screaming fast without needing to go the client-side JS/JSON server route. Much of this work was pioneered for Rails in the new version of Basecamp and focuses on three aspects:
  &lt;br&gt;
  &lt;br&gt;
  &lt;ol&gt;
    &lt;li&gt;Make it super easy to do Russian Doll-caching through key-based expiration with automatic dependency management of nested templates (explored first in the cache_digests plugin).&lt;/li&gt;
    &lt;li&gt;Speed-up the client-side with Turbolinks, which essentially turns your app into a single-page javascript application in terms of speed, but with none of the developmental drawbacks (except, maybe, compatibility issues with some existing JavaScript packages).&lt;/li&gt;
    &lt;li&gt;Declarative etags makes it even easier to ensure you're taking advantage of HTTP freshness.&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;
Also:
&lt;blockquote&gt;Active Resource, Active Record Observers, and Action Pack page and action caching are all examples of things that are no longer in core, but lives on in plugins.&lt;/blockquote&gt;
&lt;blockquote&gt;We encourage you to peruse the CHANGELOGs for all the Rails frameworks and delight over the hundreds of improvements we've made to Rails 4.0: &lt;a href="https://github.com/rails/rails/blob/v4.0.0/actionpack/CHANGELOG.md"&gt;Action Pack&lt;/a&gt;, &lt;a href="https://github.com/rails/rails/blob/v4.0.0/activemodel/CHANGELOG.md"&gt;Active Model&lt;/a&gt;, &lt;a href="https://github.com/rails/rails/blob/v4.0.0/activerecord/CHANGELOG.md"&gt;Active Record&lt;/a&gt;, &lt;a href="https://github.com/rails/rails/blob/v4.0.0/activesupport/CHANGELOG.md"&gt;Active Support&lt;/a&gt;, &lt;a href="https://github.com/rails/rails/blob/v4.0.0/railties/CHANGELOG.md"&gt;Rails&lt;/a&gt;.
&lt;/blockquote&gt;

Finally, you can check out the &lt;a href="http://edgeguides.rubyonrails.org/upgrading_ruby_on_rails.html#upgrading-from-rails-3-2-to-rails-4-0"&gt;upgrade guide&lt;/a&gt; or the &lt;a href="http://railscasts.com/episodes/415-upgrading-to-rails-4"&gt;Railscast screencast&lt;/a&gt;.
&lt;/p&gt;


&lt;h4&gt;&lt;a href="http://www.kalzumeus.com/2013/06/17/if-your-business-uses-rails-2-3-you-need-to-move-to-a-supported-option-asap/" target="_blank"&gt;If Your Business Uses Rails 2.3 You Need To Move To A Supported Option ASAP&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;
  &lt;blockquote&gt;Executive summary for your CTO: If your company runs Rails 2.3 apps, switch to &lt;a href="http://www.railslts.com/"&gt;Rails LTS&lt;/a&gt;, a commercially supported fork of Rails.  If you do not do this, and do not take one of the more elaborate mitigation steps as described below, your Rails applications will be compromised, you will lose the servers you run on, and your business will suffer substantial losses.&lt;/blockquote&gt;

  &lt;blockquote&gt;
    &lt;h5&gt;Your Options If You Are Currently On Rails 2.3.X&lt;/h5&gt;
    &lt;ol&gt;
      &lt;li&gt;Do nothing and, with probability of 100%, get your server owned.&lt;/li&gt;
      &lt;li&gt;Rewrite your applications for Rails 3 or Rails 4, which are currently supported.&lt;/li&gt;
      &lt;li&gt;Support Rails 2.3 yourself&lt;/li&gt;
      &lt;li&gt;Pray that someone supports Rails 2.3 for you&lt;/li&gt;
      &lt;li&gt;Pay for a commercial fork of Rails 2.3&lt;/li&gt;
    &lt;/ol&gt;



  &lt;/blockquote&gt;
&lt;/p&gt;


&lt;h4&gt;&lt;a href="http://blog.steveklabnik.com/posts/2013-06-25-removing-turbolinks-from-rails-4" target="_blank"&gt;Removing Turbolinks from Rails 4
&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;
  &lt;blockquote&gt;
    If you don't want to use Turbolinks with your Rails 4 application, it's easy! Just do this:
    &lt;ol&gt;
        &lt;li&gt; Remove the gem 'turbolinks' line from your Gemfile.&lt;/li&gt;
        &lt;li&gt;Remove the //= require turbolinks from your app/assets/javascripts/application.js.&lt;/li&gt;
        &lt;li&gt;Remove the two "data-turbolinks-track" =&gt; true hash key/value pairs from your app/views/layouts/application.html.erb.&lt;/li&gt;
    &lt;/ol&gt;
   Done!
  &lt;/blockquote&gt;
&lt;/p&gt;


&lt;h4&gt;&lt;a href="http://railssecurity.com/" target="_blank"&gt;Free one-month course on fixing common Rails vulnerabilities, via email&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;
  &lt;blockquote&gt;
You’ll get a new lesson every few days for the next month. By the end, your critical Rails app will be a veritable Fort Knox.
&lt;br&gt;&lt;br&gt;
What you’ll learn:
&lt;br&gt;&lt;br&gt;
Lesson 1: Three Rails security risks you won’t find in the official guide
&lt;br&gt;
Lesson 2: The attack vector behind 87% of one year's detected vulnerabilities
&lt;br&gt;
Lesson 3: Surprise! Rails is still vulnerable to SQL injection
&lt;br&gt;
Lesson 4: Catching security issues before they reach production
&lt;br&gt;
Lesson 5: The power of automated security audits
&lt;br&gt;
Lesson 6: Three surprising ways that Ruby's dynamic nature is a risk
&lt;br&gt;
Lesson 7: A few Bad Ideas you might have accidentally implemented
  &lt;/blockquote&gt;
&lt;/p&gt;


&lt;h4&gt;&lt;a href="https://blog.engineyard.com/2013/whats-new-and-awesome-in-ruby-2" target="_blank"&gt;What's New and Awesome in Ruby 2&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;
  &lt;h5&gt;Faster&lt;/h5&gt;
  &lt;blockquote&gt;Ruby 2 has a few patches that dramatically improve performance. The biggest of these is a substantial optimization to Kernel#require, which speeds up Rails startup dramatically. &lt;/blockquote&gt;

  &lt;h5&gt;UTF-8 By Default&lt;/h5&gt;
  &lt;blockquote&gt;All Ruby scripts now default to UTF-8 encoding. This makes the #encoding: utf-8 magic comment no longer necessary.&lt;/blockquote&gt;

  And more: keywork arguments, lazy enumerators, literal symbol array syntax.
&lt;/p&gt;


&lt;h4&gt;&lt;a href="" target="_blank"&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;
&lt;/p&gt;


&lt;h4&gt;&lt;a href="" target="_blank"&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;
&lt;/p&gt;


&lt;h4&gt;&lt;a href="" target="_blank"&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;
&lt;/p&gt;


&lt;h4&gt;&lt;a href="" target="_blank"&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;
&lt;/p&gt;


&lt;h4&gt;&lt;a href="" target="_blank"&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;
&lt;/p&gt;


&lt;h4&gt;&lt;a href="" target="_blank"&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;
&lt;/p&gt;


&lt;h4&gt;&lt;a href="" target="_blank"&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;
&lt;/p&gt;


&lt;h4&gt;&lt;a href="" target="_blank"&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;
&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Kansas City Ruby RTanque League: Round Two Results</title>
    <link rel="alternate" href="/2013/07/09/kansas-city-ruby-rtanque-league-round-two-results/"/>
    <id>/2013/07/09/kansas-city-ruby-rtanque-league-round-two-results/</id>
    <published>2013-07-09T00:00:00Z</published>
    <updated>2013-07-09T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">These are the results for round one of the 2013
&lt;a href="http://meetup.com/kcruby"&gt;KC Ruby&lt;/a&gt;
RTanque League.
&lt;h2&gt;Results: Win, Loss, Avg Health Left&lt;/h2&gt;
&lt;table class='table table-bordered'&gt;
  &lt;thead&gt;
    &lt;th&gt;Rank&lt;/th&gt;
    &lt;th&gt;Bot&lt;/th&gt;
    &lt;th&gt;Wins&lt;/th&gt;
    &lt;th&gt;Losses&lt;/th&gt;
    &lt;th&gt;Health&lt;/th&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;joeandaverde&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;69.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;THEtheChad&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;58.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;dalek&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;41.5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;Darren&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;41.7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;twitch&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;28.2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;sir ticks a lot&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;39.5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;MacGyver&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;24.5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;DrunkBot&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;18.5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;jamesior_bot&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;24.9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;Seek&amp;amp;Destroy&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;18.9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;wallhugger&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;32.5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;hacker&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;1.1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;For losses, remaining health is 0.  For draws, both bots get their remaining health.&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;
  Some matches were infinite, so I capped each match at 7500 ticks.
  &lt;br&gt;
  &lt;i&gt;
    I'll update this with questions if you have them. Post to the meetup thread.
  &lt;/i&gt;
&lt;/p&gt;
&lt;h2&gt;Round Three Due: Sunday, July 14th at midnight&lt;/h2&gt;
&lt;p&gt;
  We're going to run the next round live at KC Ruby, so get your entry in.  Even if you didn't enter the previous rounds, you can still play!
&lt;/p&gt;
&lt;h2&gt;How to submit&lt;/h2&gt;
&lt;p&gt;
  &lt;ul&gt;
    &lt;li&gt;upload your bot's code to a private gist&lt;/li&gt;
    &lt;li&gt;bot filename must end in .rb&lt;/li&gt;
    &lt;li&gt;please keep the same bot name in your class so we can compare&lt;/li&gt;
    &lt;li&gt;
      fill out
      &lt;a href="http://bit.ly/2013-kcruby-rtanque-signup"&gt;this google form&lt;/a&gt;
      with the following information:
      &lt;ul&gt;
        &lt;li&gt;your name&lt;/li&gt;
        &lt;li&gt;gist ID from above&lt;/li&gt;
        &lt;li&gt;twitter handle&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/p&gt;
&lt;h2&gt;Viewing the replays&lt;/h2&gt;
&lt;p&gt;Every match has been recorded, so you can grab the download and watch them to see what went well and what you need to improve on.&lt;/p&gt;
&lt;h4&gt;Download the matches&lt;/h4&gt;
&lt;p&gt;
  (zipped YAML):
  &lt;a href="https://s3.amazonaws.com/databasically/articles_files/kcruby-rtanque-2013-round-2-replays.zip"&gt;download&lt;/a&gt;
  &lt;br&gt;
  Unzip to your rtanque directory.
&lt;/p&gt;
&lt;h4&gt;Grab the databasically fork of RTanque&lt;/h4&gt;
&lt;p&gt;This has the record/replay logic that hasn't been merged into master yet.&lt;/p&gt;
&lt;pre&gt;# A sample Gemfile&amp;#x000A;source "https://rubygems.org"&amp;#x000A;&amp;#x000A;gem 'rtanque', :path =&gt; "/Users/wg/code/rtanque/databasically-rtanque"&lt;/pre&gt;
&lt;p&gt;Bundle.&lt;/p&gt;
&lt;pre&gt;bundle update rtanque&lt;/pre&gt;
&lt;p&gt;Find the name of the match you want to watch, start it with:&lt;/p&gt;
&lt;pre&gt;bundle exec rtanque replay replays/bot--vs--bot.yml&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Kansas City Ruby RTanque League: Round One Results</title>
    <link rel="alternate" href="/2013/07/03/kansas-city-ruby-rtanque-league-round-one-results/"/>
    <id>/2013/07/03/kansas-city-ruby-rtanque-league-round-one-results/</id>
    <published>2013-07-03T00:00:00Z</published>
    <updated>2013-07-03T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">These are the results for round one of the 2013
&lt;a href="http://meetup.com/kcruby"&gt;KC Ruby&lt;/a&gt;
RTanque League.
&lt;h2&gt;Results: Win, Loss, Avg Health Left&lt;/h2&gt;
&lt;table class='table table-bordered'&gt;
  &lt;thead&gt;
    &lt;th&gt;Rank&lt;/th&gt;
    &lt;th&gt;Bot&lt;/th&gt;
    &lt;th&gt;Wins&lt;/th&gt;
    &lt;th&gt;Losses&lt;/th&gt;
    &lt;th&gt;Health&lt;/th&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;twitch&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;36.2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;dalek&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;62.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;Darren&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;51.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;MacGyver&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;39.1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;Dwight Schrute&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;30.7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;jamesior_bot&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;41.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;jonaldomo&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;27.7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;Seek&amp;amp;Destroy&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;23.2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;wallhugger&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;38.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;hacker&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;5.3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;For losses, remaining health is 0.  For draws, both bots get their remaining health.&lt;/p&gt;
&lt;h2&gt;Details&lt;/h2&gt;
&lt;p&gt;
  Some matches were infinite, so I capped each match at 5000 ticks.
  &lt;br&gt;
  &lt;i&gt;
    I'll update this with questions if you have them. Post to the meetup thread.
  &lt;/i&gt;
&lt;/p&gt;
&lt;h2&gt;Round Two Due: Monday, July 7th at midnight&lt;/h2&gt;
&lt;p&gt;
  We're going to run the next round live at KC Ruby, so get your entry in.  Even if you didn't enter round one, you can still play!
&lt;/p&gt;
&lt;h2&gt;How to submit&lt;/h2&gt;
&lt;p&gt;
  &lt;ul&gt;
    &lt;li&gt;upload your bot's code to a private gist&lt;/li&gt;
    &lt;li&gt;bot filename must end in .rb&lt;/li&gt;
    &lt;li&gt;please keep the same bot name in your class so we can compare&lt;/li&gt;
    &lt;li&gt;
      fill out
      &lt;a href="http://bit.ly/2013-kcruby-rtanque-signup"&gt;this google form&lt;/a&gt;
      with the following information:
      &lt;ul&gt;
        &lt;li&gt;your name&lt;/li&gt;
        &lt;li&gt;gist ID from above&lt;/li&gt;
        &lt;li&gt;twitter handle&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/p&gt;
&lt;h2&gt;Viewing the replays&lt;/h2&gt;
&lt;p&gt;Every match has been recorded, so you can grab the download and watch them to see what went well and what you need to improve on.&lt;/p&gt;
&lt;h4&gt;Download the matches&lt;/h4&gt;
&lt;p&gt;
  (zipped YAML):
  &lt;a href="https://s3.amazonaws.com/databasically/articles_files/kcruby-rtanque-2013-round-1-replays.zip"&gt;download&lt;/a&gt;
  &lt;br&gt;
  Unzip to your rtanque directory.
&lt;/p&gt;
&lt;h4&gt;Grab the databasically fork of RTanque&lt;/h4&gt;
&lt;p&gt;This has the record/replay logic that hasn't been merged into master yet.&lt;/p&gt;
&lt;pre&gt;# A sample Gemfile&amp;#x000A;source "https://rubygems.org"&amp;#x000A;&amp;#x000A;gem 'rtanque', :path =&gt; "/Users/wg/code/rtanque/databasically-rtanque"&lt;/pre&gt;
&lt;p&gt;Bundle.&lt;/p&gt;
&lt;pre&gt;bundle update rtanque&lt;/pre&gt;
&lt;p&gt;Find the name of the match you want to watch, start it with:&lt;/p&gt;
&lt;pre&gt;bundle exec rtanque replay replays/bot--vs--bot.yml&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>What's New in Ruby: June 2013</title>
    <link rel="alternate" href="/2013/06/11/whats-new-in-ruby-june-2013/"/>
    <id>/2013/06/11/whats-new-in-ruby-june-2013/</id>
    <published>2013-06-11T00:00:00Z</published>
    <updated>2013-06-11T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">Every month, &lt;a href="http://meetup.com/kcruby"&gt;Kansas City Ruby&lt;/a&gt; (#kcruby) reviews a subset of Peter Cooper's fantastic &lt;a href="http://rubyweekly.com/?utm_source=databasically"&gt;Ruby Weekly&lt;/a&gt; selections, along with other items picked up around the web.

http://www.ruby-lang.org/en/news/2013/05/14/ruby-2-0-0-p195-is-released/

&lt;h4&gt;&lt;a href="http://www.ruby-lang.org/en/news/2013/05/14/ruby-2-0-0-p195-is-released/" target="_blank"&gt;Ruby 2.0.0p195 released&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The first patchlevel release of 2.0.0. It includes a security fix of Ruby DL / Fiddle extension, along with some bug fixes and optimizations, mostly listed here.
&lt;/p&gt;


&lt;h4&gt;&lt;a href="http://blog.rubymotion.com/post/49943751398/rubymotion-goes-2-0-and-gets-osx-support-templates-and" target="_blank"&gt;RubyMotion Goes 2.0 And Gets OSX Support, Templates and Plugins&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;RubyMotion celebrates its first birthday with a version 2.0 release. The most significant update is you can now use the originally iOS-only toolkit for building regular OS X apps.
&lt;/p&gt;

&lt;h4&gt;&lt;a href="http://joshnuss.github.io/mruby-web-irb/" target="_blank"&gt;mruby: web irb&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;mruby is written in C and normally compiles to x86 or ARM byte code. Here its been compiled to JavaScript, using llvm and emscripten. The JavaScript produced is compatible with asm.js, which helps your browser's JavaScript VM run the code more efficiently.
&lt;/p&gt;

&lt;h4&gt;&lt;a href="https://github.com/blog/1517-introducing-octokit" target="_blank"&gt;Introducing Octokit: GitHub-maintained Client Libraries for the GitHub API&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;
Octokit.rb: &lt;a href="https://github.com/octokit/octokit.rb"&gt;https://github.com/octokit/octokit.rb&lt;/a&gt;&lt;br&gt;
Octokit.objc: &lt;a href="https://github.com/octokit/octokit.objc"&gt;https://github.com/octokit/octokit.objc&lt;/a&gt;
&lt;/p&gt;

&lt;h4&gt;&lt;a href="http://confreaks.com/events/railsconf2013" target="_blank"&gt;RailsConf 2013 Videos&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;All 70 videos from RailsConf 2013 are now available to watch if you didn't make it to the conference.
&lt;/p&gt;

&lt;h4&gt;&lt;a href="https://github.com/databasically/kcruby-rtanque/blob/master/README.md" target="_blank"&gt;KC Ruby RTanque League&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;
We need your help getting the word out to Kansas City based programmers!  Please help us out with publicizing!
&lt;/p&gt;
</content>
  </entry>
</feed>
